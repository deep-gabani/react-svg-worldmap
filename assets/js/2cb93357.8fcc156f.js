"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[770],{7683:function(t,n,e){e.r(n),e.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var a=e(5773),r=e(808),i=(e(7378),e(5318)),o=["components"],s={sidebar_position:2},l="Quick start",u={unversionedId:"quick-start",id:"quick-start",isDocsHomePage:!1,title:"Quick start",description:"Install",source:"@site/../docs/quick-start.md",sourceDirName:".",slug:"/quick-start",permalink:"/react-svg-worldmap/quick-start",editUrl:"https://github.com/yanivam/react-svg-worldmap/edit/main/docs/../docs/quick-start.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/react-svg-worldmap/"},next:{title:"Customization",permalink:"/react-svg-worldmap/customization"}},c=[{value:"Install",id:"install",children:[]},{value:"Usage",id:"usage",children:[]},{value:"JavaScript Usage",id:"javascript-usage",children:[]}],p={toc:c};function d(t){var n=t.components,e=(0,r.Z)(t,o);return(0,i.kt)("wrapper",(0,a.Z)({},p,e,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"quick-start"},"Quick start"),(0,i.kt)("h2",{id:"install"},"Install"),(0,i.kt)("p",null,"In order to install, run the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ npm install react-svg-worldmap --save\n")),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"Explore the example folder for a simple case for an end-to-end react app using the react-svg-worldmap."),(0,i.kt)("p",null,"Here is a simple example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport './App.css';\nimport WorldMap from 'react-svg-worldmap';\n\nfunction App() {\n  const data = [\n    {country: 'cn', value: 1389618778}, // china\n    {country: 'in', value: 1311559204}, // india\n    {country: 'us', value: 331883986}, // united states\n    {country: 'id', value: 264935824}, // indonesia\n    {country: 'pk', value: 210797836}, // pakistan\n    {country: 'br', value: 210301591}, // brazil\n    {country: 'ng', value: 208679114}, // nigeria\n    {country: 'bd', value: 161062905}, // bangladesh\n    {country: 'ru', value: 141944641}, // russia\n    {country: 'mx', value: 127318112}, // mexico\n  ];\n\n  return (\n    <div className=\"App\">\n      <WorldMap\n        color=\"red\"\n        title=\"Top 10 Populous Countries\"\n        value-suffix=\"people\"\n        size=\"lg\"\n        data={data}\n      />\n    </div>\n  );\n}\n")),(0,i.kt)("p",null,"The only mandatory prop is ",(0,i.kt)("inlineCode",{parentName:"p"},"data"),", which contains an array of country/value objects, with values for countries that you have values for. (Countries without a value will be blank.) The country code is a 2 character string representing the country (",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2"},"ISO alpha-2"),") and value is a number."),(0,i.kt)("h2",{id:"javascript-usage"},"JavaScript Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import React, {Component} from 'react';\nconst WorldMap = require('react-svg-worldmap');\n\nexport default class SimpleJs extends Component {\n  render() {\n    // ...\n    const data = [\n      {country: 'cn', value: 1389618778}, // china\n      {country: 'in', value: 1311559204}, // india\n    ];\n    // ...\n    return (\n      <div id=\"root\">\n        <WorldMap color=\"green\" title=\"This is My Map\" size=\"lg\" data={data} />\n      </div>\n    );\n  }\n}\n")))}d.isMDXComponent=!0}}]);