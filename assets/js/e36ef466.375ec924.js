"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[581],{8922:function(e,t,n){n.d(t,{B:function(){return r},t:function(){return o}});var r=[{country:"cn",value:1389618778},{country:"in",value:1311559204},{country:"us",value:331883986},{country:"id",value:264935824},{country:"br",value:210301591},{country:"ng",value:208679114},{country:"ru",value:141944641},{country:"mx",value:127318112}],o=[{country:"cn",value:9770.8},{country:"in",value:2010},{country:"us",value:62794.6},{country:"id",value:3893.6},{country:"br",value:8920.8},{country:"ng",value:2028.2},{country:"ru",value:11288.9},{country:"mx",value:9673.4}]},9540:function(e,t,n){n.r(t),n.d(t,{default:function(){return m}});var r=n(7378),o=n(9131),u=n(9328),l=n(9616),a=n(4409),c=n(8922),i=function(e,t){for(var n=[{value:1,symbol:""},{value:1e3,symbol:" thousand "},{value:1e6,symbol:" million "},{value:1e9,symbol:" billion "}],r=(0,l.Z)(/\.0+$|(\.[0-9]*[1-9])0+$/,{number:1}),o=n.length-1;o>0;o--)if(e>=n[o].value)return(e/n[o].value).toFixed(t).replace(r,"$1")+n[o].symbol};function s(){var e=(0,r.useState)({cName:"Select Country",iso:"",val:"",pre:"",suff:""}),t=e[0],n=e[1],o=r.useCallback((function(e){var t=e.countryName,r=e.countryCode,o=e.countryValue;n({cName:t,iso:r,val:i(o,2),pre:"",suff:""})}),[n]);return r.createElement(r.Fragment,null,r.createElement(a.ZP,{title:"The ten highest GDP per capita countries",data:c.B,onClickFunction:o}),r.createElement("ul",null,r.createElement("li",null,"Country: ",t.cName),r.createElement("li",null,"ISO Code: ",t.iso),r.createElement("li",null,"GDP per capita: ",t.val)))}var p=n(2496);function m(){return r.createElement(o.Z,{title:"Onclick action example"},r.createElement("div",{className:p.Z.main},r.createElement(s,null),r.createElement("div",{className:p.Z.code},r.createElement(u.Z,{className:"language-tsx"},'import React, { useState } from "react";\nimport type { CountryContext } from "react-svg-worldmap";\nimport WorldMap from "react-svg-worldmap";\nimport { populationData } from "../data/CountryData";\n\n// E.g. format the number 1000000 to "1 thousand"\nconst formattedNumber = (num: number, digits: number) => {\n  const si = [\n    { value: 1, symbol: "" },\n    { value: 1e3, symbol: " thousand " },\n    { value: 1e6, symbol: " million " },\n    { value: 1e9, symbol: " billion " },\n  ];\n  const rx = /\\.0+$|(?<number>\\.[0-9]*[1-9])0+$/;\n  for (let i = si.length - 1; i > 0; i--) {\n    if (num >= si[i].value) {\n      return (\n        (num / si[i].value).toFixed(digits).replace(rx, "$1") + si[i].symbol\n      );\n    }\n  }\n  return undefined;\n};\n\nexport default function App(): JSX.Element {\n  const [state, setState] = useState({\n    cName: "Select Country",\n    iso: "",\n    val: "",\n    pre: "",\n    suff: "",\n  });\n\n  const clickAction = React.useCallback(\n    ({ countryName, countryCode, countryValue }: CountryContext) => {\n      setState({\n        cName: countryName,\n        iso: countryCode,\n        val: formattedNumber(countryValue, 2),\n        pre: "",\n        suff: "",\n      });\n    },\n    [setState],\n  );\n\n  return (\n    <>\n      <WorldMap\n        title="The ten highest GDP per capita countries"\n        data={populationData}\n        onClickFunction={clickAction}\n      />\n      <ul>\n        <li>Country: {state.cName}</li>\n        <li>ISO Code: {state.iso}</li>\n        <li>GDP per capita: {state.val}</li>\n      </ul>\n    </>\n  );\n}\n'))))}},9616:function(e,t,n){function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}n.d(t,{Z:function(){return l}});var o=n(6983);function u(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&(0,o.Z)(e,t)}function l(){l=function(e,t){return new n(e,void 0,t)};var e=RegExp.prototype,t=new WeakMap;function n(e,r,u){var l=new RegExp(e,r);return t.set(l,u||t.get(e)),(0,o.Z)(l,n.prototype)}function a(e,n){var r=t.get(n);return Object.keys(r).reduce((function(t,n){return t[n]=e[r[n]],t}),Object.create(null))}return u(n,RegExp),n.prototype.exec=function(t){var n=e.exec.call(this,t);return n&&(n.groups=a(n,this)),n},n.prototype[Symbol.replace]=function(n,o){if("string"==typeof o){var u=t.get(this);return e[Symbol.replace].call(this,n,o.replace(/\$<([^>]+)>/g,(function(e,t){return"$"+u[t]})))}if("function"==typeof o){var l=this;return e[Symbol.replace].call(this,n,(function(){var e=arguments;return"object"!=r(e[e.length-1])&&(e=[].slice.call(e)).push(a(e,l)),o.apply(this,e)}))}return e[Symbol.replace].call(this,n,o)},l.apply(this,arguments)}}}]);