"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[581],{8922:function(e,n,t){t.d(n,{B:function(){return a},t:function(){return u}});var a=[{country:"cn",value:1389618778},{country:"in",value:1311559204},{country:"us",value:331883986},{country:"id",value:264935824},{country:"br",value:210301591},{country:"ng",value:208679114},{country:"ru",value:141944641},{country:"mx",value:127318112}],u=[{country:"cn",value:9770.8},{country:"in",value:2010},{country:"us",value:62794.6},{country:"id",value:3893.6},{country:"br",value:8920.8},{country:"ng",value:2028.2},{country:"ru",value:11288.9},{country:"mx",value:9673.4}]},9540:function(e,n,t){t.r(n),t.d(n,{default:function(){return v}});var a=t(7378),u=t(7582),l=t(8788),r=t(9616),o=t(1194),c=t(8922),i=function(e,n){for(var t=[{value:1,symbol:""},{value:1e3,symbol:" thousand "},{value:1e6,symbol:" million "},{value:1e9,symbol:" billion "}],a=(0,r.Z)(/\.0+$|(\.[0-9]*[1-9])0+$/,{number:1}),u=t.length-1;u>0;u--)if(e>=t[u].value)return(e/t[u].value).toFixed(n).replace(a,"$1")+t[u].symbol};function s(){var e=(0,a.useState)({cName:"Select Country",iso:"",val:"",pre:"",suff:""}),n=e[0],t=e[1],u=a.useCallback((function(e){var n=e.countryName,a=e.countryCode,u=e.countryValue;t({cName:n,iso:a,val:i(u,2),pre:"",suff:""})}),[t]);return a.createElement(a.Fragment,null,a.createElement(o.Z,{title:"The ten highest GDP per capita countries",data:c.B,onClickFunction:u}),a.createElement("ul",null,a.createElement("li",null,"Country: ",n.cName),a.createElement("li",null,"ISO Code: ",n.iso),a.createElement("li",null,"GDP per capita: ",n.val)))}var m=t(2496);function v(){return a.createElement(u.Z,{title:"Onclick action example"},a.createElement("div",{className:m.Z.main},a.createElement(s,null),a.createElement("div",{className:m.Z.code},a.createElement(l.Z,{className:"language-tsx"},'import React, { useState } from "react";\nimport type { CountryContext } from "react-svg-worldmap";\nimport WorldMap from "react-svg-worldmap";\nimport { populationData } from "../data/CountryData";\n\n// E.g. format the number 1000000 to "1 thousand"\nconst formattedNumber = (num: number, digits: number) => {\n  const si = [\n    { value: 1, symbol: "" },\n    { value: 1e3, symbol: " thousand " },\n    { value: 1e6, symbol: " million " },\n    { value: 1e9, symbol: " billion " },\n  ];\n  const rx = /\\.0+$|(?<number>\\.[0-9]*[1-9])0+$/;\n  for (let i = si.length - 1; i > 0; i--) {\n    if (num >= si[i].value) {\n      return (\n        (num / si[i].value).toFixed(digits).replace(rx, "$1") + si[i].symbol\n      );\n    }\n  }\n  return undefined;\n};\n\nexport default function App(): JSX.Element {\n  const [state, setState] = useState({\n    cName: "Select Country",\n    iso: "",\n    val: "",\n    pre: "",\n    suff: "",\n  });\n\n  const clickAction = React.useCallback(\n    ({ countryName, countryCode, countryValue }: CountryContext) => {\n      setState({\n        cName: countryName,\n        iso: countryCode,\n        val: formattedNumber(countryValue, 2),\n        pre: "",\n        suff: "",\n      });\n    },\n    [setState],\n  );\n\n  return (\n    <>\n      <WorldMap\n        title="The ten highest GDP per capita countries"\n        data={populationData}\n        onClickFunction={clickAction}\n      />\n      <ul>\n        <li>Country: {state.cName}</li>\n        <li>ISO Code: {state.iso}</li>\n        <li>GDP per capita: {state.val}</li>\n      </ul>\n    </>\n  );\n}\n'))))}}}]);