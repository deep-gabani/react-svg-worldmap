"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[838],{8922:function(n,e,t){t.d(e,{B:function(){return a},t:function(){return o}});var a=[{country:"cn",value:1389618778},{country:"in",value:1311559204},{country:"us",value:331883986},{country:"id",value:264935824},{country:"br",value:210301591},{country:"ng",value:208679114},{country:"ru",value:141944641},{country:"mx",value:127318112}],o=[{country:"cn",value:9770.8},{country:"in",value:2010},{country:"us",value:62794.6},{country:"id",value:3893.6},{country:"br",value:8920.8},{country:"ng",value:2028.2},{country:"ru",value:11288.9},{country:"mx",value:9673.4}]},1386:function(n,e,t){t.r(e),t.d(e,{default:function(){return f}});var a=t(7378),o=t(7582),i=t(8788),r=t(9616),u=t(1194),l=t(8922),s=new Map([["br","Brasil"],["cn","China"],["id","Indonesia"],["in","India"],["mx","M\xe9xico"],["ng","Nigeria"],["ru","Rusia"],["us","Estados Unidos"]]);var c=function(n){var e=n.countryCode,t=n.countryValue,a=n.prefix,o=n.suffix;return(s.has(e.toLocaleLowerCase())?s.get(e.toLocaleLowerCase()):"Unknown")+": "+(a?a+" ":"")+function(n,e){if(void 0===n)return"";for(var t=[{value:1,symbol:""},{value:1e3,symbol:" miles "},{value:1e6,symbol:" mill\xf3nes "},{value:1e9,symbol:" mil mill\xf3nes "}],a=(0,r.Z)(/\.0+$|(\.[0-9]*[1-9])0+$/,{number:1}),o=t.length-1;o>0;o--)if(n>=t[o].value)return(n/t[o].value).toFixed(e).replace(a,"$1")+t[o].symbol;return""}(t,2)+(o||"")};function m(){return a.createElement(u.Z,{title:"Los diez pa\xedses principales por poblaci\xf3n",data:l.B,valueSuffix:"personas",tooltipTextFunction:c})}var d=t(2496);function f(){return a.createElement(o.Z,{title:"Localization example"},a.createElement("div",{className:d.Z.main},a.createElement(m,null),a.createElement("div",{className:d.Z.code},a.createElement(i.Z,{className:"language-tsx"},'import React from "react";\nimport type { CountryContext } from "react-svg-worldmap";\nimport WorldMap from "react-svg-worldmap";\nimport { populationData } from "../data/CountryData";\n\n// Spanish translation of country names\nconst localizedCountryDictionary = new Map<string, string>([\n  ["br", "Brasil"], // Brazil\n  ["cn", "China"], // China\n  ["id", "Indonesia"], // Indonesia\n  ["in", "India"], // India\n  ["mx", "M\xe9xico"], // Mexico\n  ["ng", "Nigeria"], // Nigeria\n  ["ru", "Rusia"], // Russia\n  ["us", "Estados Unidos"], // United States\n]);\n\n// Spanish number formatting for thousands, millions, and billions\n// E.g. translate the number 1000000 to "1 mill\xf3nes"\nfunction localizedNumber(num: number | undefined, digits: number) {\n  if (typeof num === "undefined") return "";\n  const si = [\n    { value: 1, symbol: "" },\n    { value: 1e3, symbol: " miles " },\n    { value: 1e6, symbol: " mill\xf3nes " },\n    { value: 1e9, symbol: " mil mill\xf3nes " },\n  ];\n  const rx = /\\.0+$|(?<number>\\.[0-9]*[1-9])0+$/;\n  for (let i = si.length - 1; i > 0; i--) {\n    if (num >= si[i]!.value) {\n      return (\n        (num / si[i]!.value).toFixed(digits).replace(rx, "$1") + si[i]!.symbol\n      );\n    }\n  }\n  return "";\n}\n\n// Localization callback\nconst getLocalizedText = ({\n  countryCode,\n  countryValue,\n  prefix,\n  suffix,\n}: CountryContext) => {\n  const localizedCountryName = localizedCountryDictionary.has(\n    countryCode.toLocaleLowerCase(),\n  )\n    ? localizedCountryDictionary.get(countryCode.toLocaleLowerCase())!\n    : "Unknown";\n  const spanishTranslation = `${localizedCountryName}: ${\n    prefix ? `${prefix} ` : ""\n  }${localizedNumber(countryValue, 2)}${suffix ? suffix : ""}`;\n  return spanishTranslation;\n};\n\nexport default function App(): JSX.Element {\n  return (\n    <WorldMap\n      title="Los diez pa\xedses principales por poblaci\xf3n"\n      data={populationData}\n      valueSuffix="personas"\n      tooltipTextFunction={getLocalizedText}\n    />\n  );\n}\n'))))}}}]);