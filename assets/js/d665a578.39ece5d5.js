"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[510],{1390:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return o},toc:function(){return m},default:function(){return d}});var l=a(5773),n=a(808),i=(a(7378),a(5318)),r=["components"],p={sidebar_position:5},s="Examples",o={unversionedId:"examples",id:"examples",isDocsHomePage:!1,title:"Examples",description:"examples/sizing",source:"@site/../docs/examples.md",sourceDirName:".",slug:"/examples",permalink:"/react-svg-worldmap/examples",editUrl:"https://github.com/yanivam/react-svg-worldmap/edit/main/docs/../docs/examples.md",version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"API",permalink:"/react-svg-worldmap/api"}},m=[{value:"examples/sizing",id:"examplessizing",children:[]},{value:"examples/custom-style",id:"examplescustom-style",children:[]},{value:"examples/localization",id:"exampleslocalization",children:[]},{value:"examples/onclick",id:"examplesonclick",children:[]},{value:"examples/links",id:"exampleslinks",children:[]},{value:"examples/text-labels",id:"examplestext-labels",children:[]}],u={toc:m};function d(e){var t=e.components,a=(0,n.Z)(e,r);return(0,i.kt)("wrapper",(0,l.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"examples"},"Examples"),(0,i.kt)("h2",{id:"examplessizing"},(0,i.kt)("a",{parentName:"h2",href:"/examples/sizing"},"examples/sizing")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A simple example of the world map"),(0,i.kt)("li",{parentName:"ul"},"4 maps given two different data sets"),(0,i.kt)("li",{parentName:"ul"},"Example of some simple features using the default styling"),(0,i.kt)("li",{parentName:"ul"},"Responsive size example showing how an example with responsive size looks")),(0,i.kt)("h2",{id:"examplescustom-style"},(0,i.kt)("a",{parentName:"h2",href:"/examples/custom-style"},"examples/custom-style")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"An example of a custom styling function"),(0,i.kt)("li",{parentName:"ul"},"Context type has fields are as follows:")),(0,i.kt)("small",null,(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Field"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"country")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:null},"ISO value for each country")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"countryValue")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:null},"Value inputted for the specific country (this is the input data for the specific country)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"color")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:null},"The color that is inputted by the user for countries with values")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"minValue")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:null},"The smallest value of the input data")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"maxValue")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:null},"The largest value of the input data"))))),(0,i.kt)("h2",{id:"exampleslocalization"},(0,i.kt)("a",{parentName:"h2",href:"/examples/localization"},"examples/localization")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"An example showing how to use the ",(0,i.kt)("inlineCode",{parentName:"li"},"tooltipTextFunction")," to locolize tooltip texts."),(0,i.kt)("li",{parentName:"ul"},"The function translates both country names and values to Spanish."),(0,i.kt)("li",{parentName:"ul"},"For example:")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Data"),(0,i.kt)("th",{parentName:"tr",align:null},"Localized text"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},' { "country": "us", value: 331883986 }')),(0,i.kt)("td",{parentName:"tr",align:null},'"Estados Unidos: 3.32 mil mill\xf3nes"')))),(0,i.kt)("h2",{id:"examplesonclick"},(0,i.kt)("a",{parentName:"h2",href:"/examples/onclick"},"examples/onclick")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"An example showing how each country can have an ",(0,i.kt)("inlineCode",{parentName:"li"},"onclick")," event handler bound."),(0,i.kt)("li",{parentName:"ul"},"When clicking on a country with value, the React state would be updated.")),(0,i.kt)("h2",{id:"exampleslinks"},(0,i.kt)("a",{parentName:"h2",href:"/examples/links"},"examples/links")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"An example showing how each country can have an ",(0,i.kt)("inlineCode",{parentName:"li"},"href")," bound."),(0,i.kt)("li",{parentName:"ul"},"Each country in the example takes you to its Wikipedia page.")),(0,i.kt)("h2",{id:"examplestext-labels"},(0,i.kt)("a",{parentName:"h2",href:"/examples/text-labels"},"examples/text-labels")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"An example showing how to draw custom text labels on the map."),(0,i.kt)("li",{parentName:"ul"},"The callback receives ",(0,i.kt)("inlineCode",{parentName:"li"},"mapWidth"),", the current map width, as the parameter, and responsively draws text labels onto the SVG."),(0,i.kt)("li",{parentName:"ul"},"Besides the ",(0,i.kt)("inlineCode",{parentName:"li"},"label"),", any other keys will be passed as props to the ",(0,i.kt)("inlineCode",{parentName:"li"},"text")," element."),(0,i.kt)("li",{parentName:"ul"},"This example labels the four oceans responsively, coloring the Arctic ocean in another color.")))}d.isMDXComponent=!0}}]);